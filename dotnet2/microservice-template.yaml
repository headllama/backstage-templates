apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-dotNet-app-template
  title: .Net App Template - WALBER 2
  description: Crie um novo projeto .Net
  tags:
    - dotnet
spec:
  owner: Junto Seguros
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - app_name
        - owner
      properties:
        app_name:
          title: Nome
          type: string
          description: Nome do componente
          ui:field: EntityNamePicker
        description:
          title: Descrição
          type: string
          description: Descrição
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - User
          defaultValue: github/${{identity.githubLogin}}
    - title: Provide some simple information
      required:
        - foo
        - bar
      properties:
        foo:
          title: Foo Title
          type: string
          description: Pergunta 1
        bar:
          title: Bar Title
          type: string
          description: Pergunta 1 com regex
          pattern: '^[a-zA-Z0-9]{3,50}$'
        checkbox:
          title: Checkbox
          type: string
          description: Checkbox maneira
          default: gke
          enum:
            - FOO
            - BAR
          enumNames:
            - 'Checkbox 1'
            - 'Checkbox 2'
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          app_name: ${{ parameters.app_name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          foo: ${{ parameters.foo }}
          bar: ${{ parameters.bar }}

#    - id: Rename
#      name: Rename solution and project
#      action: fs:rename
#      input:
#        files:
#          - from: ./foo
#            to: ./bar

    - id: add-foo-file
      name: Adicionar Arquivo foo-XXXX
      action: github:commit
      input:
        # Defina o caminho e o conteúdo do arquivo foo-XXXX
        path: 'foo-123'  # A variável `timestamp` adicionará um timestamp único.
        content: |
          # Arquivo foo-XXXX
          Conteúdo gerado para o arquivo foo-XXXX
        repository: 'https://github.com/headllama/abc123456.git'
        branch: 'master'  # Ou outro branch do seu repositório
        commitMessage: 'Adicionando arquivo foo-XXXX'

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.app_name }}
        repoUrl: 'github.com?repo=${{ parameters.app_name }}&owner=headllama'
        repoVisibility: 'private'
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
