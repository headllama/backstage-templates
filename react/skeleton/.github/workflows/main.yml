# Nome da pipeline.
name: Backstage ms deploy

env:
  PROJETO: "backstage-coe"
  EMAIL: "walber.silva@sysmap.com.br"
  NAMESPACE: "backstage-ms"
  REPO: walber7

# Hooks
# on é obrigatório
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ bar ]

# Os jobs que irão rodar
jobs:
  build_job:
    name: build
    runs-on: coe-gcp
    steps:
    - uses: actions/checkout@v2.4.0    
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - run: |
        npm init -y
        npm install
#     - uses: actions/upload-artifact@v3.1.1
#       with:
#         path: ${{ '${{ github.workspace }}' }}/package.json
#         name: skeleton-tar
#         if-no-files-found: error
#         retention-days: 1

  sonarqube:
    name: sonarqube
    runs-on: coe-gcp
    needs: [build_job]
    steps:
      - uses: actions/checkout@v2.4.0
      - name: create env file
        id: env
        run: |
          echo "$SONARQUBE_FILE" > ./sonar-project.js
        env:
          SONARQUBE_FILE : ${{ '${{secrets.SONARQUBE_FILE}}' }} 
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1.2.0
        env:
          SONAR_TOKEN: ${{ '${{ secrets.SONAR_TOKEN }}' }}
          SONAR_HOST_URL: ${{ '${{ secrets.SONAR_HOST_URL }}' }}
        
  kaniko:
   name: kaniko_push
   runs-on: coe-gcp
   needs: [build_job]
   steps:
   - uses: actions/checkout@v2.4.0
#    - uses: actions/download-artifact@v3.0.1
#      with:
#        name: skeleton-tar
#        path: ${{ '${{ github.workspace }}' }}/package.json
   - name: Kaniko builder
     uses: aevea/action-kaniko@v0.10.0
     with:
       username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
       password: ${{ '${{ secrets.DOCKERHUB_PASSWORD }}' }}
       image: walber7/react-web-app
       tag: ${{ '${{ github.run_number }}' }}
  #         cache: true
  #         cache_registry: walber7/cache
        
  deploy:
    name: Deploy
    runs-on: coe-gcp
    needs: [kaniko]
    steps:
     - uses: actions/checkout@v2.4.0
     - name: Import Secrets
       id: import-secrets
       uses: hashicorp/vault-action@v2
       with:
        url: ${{ '${{ secrets.VAULT_URL }}' }}
        token: ${{ '${{ secrets.VAULT_TOKEN }}' }}
        secrets: |
            coe-secrets/backstage kubeconfig | KUBECONFIG-VAULT ;
     - name: Set short git commit SHA
       id: vars
       run: |
         sed -i 's,$REGISTRY.*,${{ '${{ env.REPO }}' }}/${{ '${{ env.PROJETO }}' }},' helm/values.yaml
         sed -i 's,tag:.*",tag: \"${{ '${{ github.run_number }}' }}\",' helm/values.yaml
         echo "${{ '${{ env.KUBECONFIG-VAULT }}' }}" | base64 -d > kubeconfig.backstage
     - name: Helm tool installer
       uses: Azure/setup-helm@v3    
     - name: Deploy
       run: |
         helm upgrade --install backstage-teste helm/ -n ${{ '${{ env.NAMESPACE }}' }}
       env:
         KUBECONFIG: kubeconfig.backstage
